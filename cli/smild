#!/usr/bin/env node

var program = require('commander'),
    packageJson = require('../package.json'),
    command = null,
    target = null,
    gulp = require('gulp'),
    _ = require('lodash'),
    chalk = require('chalk'),
    ProjectType = require('../lib/ProjectType');

program
    .version(packageJson.version)
    .option('-r, --release', 'Enable release mode')
    .option('-t, --type [projectType]', 'Specify the project type for scaffolding')
    .arguments('<command> [target]')
    .action(function (_command, _target) {
        command = _command || "tasks";
        target = _target || "main"
    })
    .parse(process.argv);

//Environment variables to be injected also in smildfile
process.env.TARGET = target;
process.env.DEBUG = !program.release;
process.on('uncaughtException', (err) => {
    console.error("Something went wrong during the build", err);
});

var smild = require('../');

if (command && _.indexOf(smild.buildManager.getTasksList(), command) < 0) {
    console.log(chalk.red(command, "task not found."));
    console.log();
    console.log("Available tasks:");
    console.log();
    command = "tasks";
}

smild.buildManager.setTarget(target);
smild.buildManager.isRelease(program.release || false);
smild.buildManager.setProjectType(program.type || ProjectType.FRONTEND);
smild.taskRunner.run(command);